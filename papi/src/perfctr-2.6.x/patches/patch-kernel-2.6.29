--- linux-2.6.29.perfctr26/CREDITS.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/CREDITS	2009-03-24 18:49:12.000000000 +0100
@@ -2755,6 +2755,7 @@ N: Mikael Pettersson
 E: mikpe@it.uu.se
 W: http://user.it.uu.se/~mikpe/linux/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.6.29.perfctr26/Documentation/ioctl/ioctl-number.txt.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/Documentation/ioctl/ioctl-number.txt	2009-03-24 18:49:12.000000000 +0100
@@ -197,6 +197,8 @@ Code	Seq#	Include File		Comments
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	see drivers/perfctr/
+					<mailto:mikpe@it.uu.se>
 0xDD	00-3F	ZFCP device driver	see drivers/s390/scsi/
 					<mailto:aherrman@de.ibm.com>
 0xF3	00-3F	video/sisfb.h		sisfb (in development)
--- linux-2.6.29.perfctr26/MAINTAINERS.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/MAINTAINERS	2009-03-24 18:49:12.000000000 +0100
@@ -3408,6 +3408,12 @@ M:	balbir@linux.vnet.ibm.com
 L:	linux-kernel@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@it.uu.se
+W:	http://user.it.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PERSONALITY HANDLING
 P:	Christoph Hellwig
 M:	hch@infradead.org
--- linux-2.6.29.perfctr26/arch/arm/Kconfig.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/arm/Kconfig	2009-03-24 18:49:12.000000000 +0100
@@ -696,6 +696,10 @@ config IWMMXT
 	  Enable support for iWMMXt context switching at run time if
 	  running on a CPU that supports it.
 
+if CPU_XSCALE
+source drivers/perfctr/Kconfig
+endif
+
 #  bool 'Use XScale PMU as timer source' CONFIG_XSCALE_PMU_TIMER
 config XSCALE_PMU
 	bool
--- linux-2.6.29.perfctr26/arch/arm/include/asm/processor.h.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/arm/include/asm/processor.h	2009-03-24 18:49:12.000000000 +0100
@@ -50,6 +50,10 @@ struct thread_struct {
 	unsigned long		error_code;
 							/* debugging	  */
 	struct debug_info	debug;
+
+#ifdef CONFIG_PERFCTR_VIRTUAL
+	struct vperfctr		*perfctr;		/* performance counters */
+#endif
 };
 
 #define INIT_THREAD  {	}
--- linux-2.6.29.perfctr26/arch/arm/include/asm/system.h.~1~	2009-03-24 18:00:31.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/arm/include/asm/system.h	2009-03-24 18:49:12.000000000 +0100
@@ -209,7 +209,9 @@ extern struct task_struct *__switch_to(s
 
 #define switch_to(prev,next,last)					\
 do {									\
+	perfctr_suspend_thread(&(prev)->thread);			\
 	last = __switch_to(prev,task_thread_info(prev), task_thread_info(next));	\
+	perfctr_resume_thread(&(current)->thread);			\
 } while (0)
 
 #if defined(CONFIG_CPU_SA1100) || defined(CONFIG_CPU_SA110)
--- linux-2.6.29.perfctr26/arch/arm/kernel/process.c.~1~	2008-12-25 15:54:13.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/arm/kernel/process.c	2009-03-24 18:49:12.000000000 +0100
@@ -26,6 +26,7 @@
 #include <linux/cpu.h>
 #include <linux/elfcore.h>
 #include <linux/pm.h>
+#include <linux/perfctr.h>
 #include <linux/tick.h>
 #include <linux/utsname.h>
 #include <linux/uaccess.h>
@@ -272,6 +273,7 @@ void show_regs(struct pt_regs * regs)
  */
 void exit_thread(void)
 {
+	perfctr_exit_thread(&current->thread);
 }
 
 ATOMIC_NOTIFIER_HEAD(thread_notify_head);
@@ -317,6 +319,8 @@ copy_thread(int nr, unsigned long clone_
 	if (clone_flags & CLONE_SETTLS)
 		thread->tp_value = regs->ARM_r3;
 
+	perfctr_copy_task(p, regs);
+
 	return 0;
 }
 
--- linux-2.6.29.perfctr26/arch/powerpc/include/asm/processor.h.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/powerpc/include/asm/processor.h	2009-03-24 18:49:12.000000000 +0100
@@ -197,6 +197,9 @@ struct thread_struct {
 	unsigned long	spefscr;	/* SPE & eFP status */
 	int		used_spe;	/* set if process has used spe */
 #endif /* CONFIG_SPE */
+#ifdef CONFIG_PERFCTR_VIRTUAL
+	struct vperfctr *perfctr;	/* performance counters */
+#endif
 };
 
 #define ARCH_MIN_TASKALIGN 16
--- linux-2.6.29.perfctr26/arch/powerpc/kernel/process.c.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/powerpc/kernel/process.c	2009-03-24 18:49:12.000000000 +0100
@@ -30,6 +30,7 @@
 #include <linux/init_task.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
+#include <linux/perfctr.h>
 #include <linux/mqueue.h>
 #include <linux/hardirq.h>
 #include <linux/utsname.h>
@@ -406,8 +407,10 @@ struct task_struct *__switch_to(struct t
 	 * window where the kernel stack SLB and the kernel stack are out
 	 * of sync. Hard disable here.
 	 */
+	perfctr_suspend_thread(&prev->thread);
 	hard_irq_disable();
 	last = _switch(old_thread, new_thread);
+	perfctr_resume_thread(&current->thread);
 
 	local_irq_restore(flags);
 
@@ -547,6 +550,7 @@ void show_regs(struct pt_regs * regs)
 void exit_thread(void)
 {
 	discard_lazy_cpu_state();
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -673,6 +677,8 @@ int copy_thread(int nr, unsigned long cl
 	kregs->nip = (unsigned long)ret_from_fork;
 #endif
 
+	perfctr_copy_task(p, regs);
+
 	return 0;
 }
 
--- linux-2.6.29.perfctr26/arch/powerpc/platforms/Kconfig.cputype.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/powerpc/platforms/Kconfig.cputype	2009-03-24 18:49:12.000000000 +0100
@@ -264,4 +264,8 @@ config NOT_COHERENT_CACHE
 config CHECK_CACHE_COHERENCY
 	bool
 
+if PPC32
+source "drivers/perfctr/Kconfig"
+endif
+
 endmenu
--- linux-2.6.29.perfctr26/arch/x86/Kconfig.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/Kconfig	2009-03-24 18:49:12.000000000 +0100
@@ -1364,6 +1364,8 @@ config CC_STACKPROTECTOR_ALL
 	  functions that use large-ish on-stack buffers. By enabling
 	  this option, GCC will be asked to do this for ALL functions.
 
+source "drivers/perfctr/Kconfig"
+
 source kernel/Kconfig.hz
 
 config KEXEC
--- linux-2.6.29.perfctr26/arch/x86/include/asm/irq_vectors.h.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/include/asm/irq_vectors.h	2009-03-24 18:49:12.000000000 +0100
@@ -85,9 +85,10 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee) we
+ * First APIC vector available to drivers: (vectors 0x30-0xed) we
  * start at 0x31(0x41) to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
--- linux-2.6.29.perfctr26/arch/x86/include/asm/processor.h.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/include/asm/processor.h	2009-03-24 18:49:12.000000000 +0100
@@ -433,6 +433,8 @@ struct thread_struct {
 	unsigned long		iopl;
 	/* Max allowed port in the bitmap, in bytes: */
 	unsigned		io_bitmap_max;
+/* performance counters */
+	struct vperfctr		*perfctr;
 /* MSR_IA32_DEBUGCTLMSR value to switch in if TIF_DEBUGCTLMSR is set.  */
 	unsigned long	debugctlmsr;
 #ifdef CONFIG_X86_DS
--- linux-2.6.29.perfctr26/arch/x86/include/asm/system.h.~1~	2009-03-24 18:00:33.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/include/asm/system.h	2009-03-24 18:49:12.000000000 +0100
@@ -37,6 +37,7 @@ do {									\
 	 * __switch_to())						\
 	 */								\
 	unsigned long ebx, ecx, edx, esi, edi;				\
+	perfctr_suspend_thread(&(prev)->thread);			\
 									\
 	asm volatile("pushfl\n\t"		/* save    flags */	\
 		     "pushl %%ebp\n\t"		/* save    EBP   */	\
@@ -87,7 +88,8 @@ do {									\
 	  "r12", "r13", "r14", "r15"
 
 /* Save restore flags to clear handle leaking NT */
-#define switch_to(prev, next, last) \
+#define switch_to(prev, next, last) do { \
+	perfctr_suspend_thread(&(prev)->thread); \
 	asm volatile(SAVE_CONTEXT						    \
 	     "movq %%rsp,%P[threadrsp](%[prev])\n\t" /* save RSP */	  \
 	     "movq %P[threadrsp](%[next]),%%rsp\n\t" /* restore RSP */	  \
@@ -107,7 +109,8 @@ do {									\
 	       [tif_fork] "i" (TIF_FORK),			  	  \
 	       [thread_info] "i" (offsetof(struct task_struct, stack)),   \
 	       [pda_pcurrent] "i" (offsetof(struct x8664_pda, pcurrent))  \
-	     : "memory", "cc" __EXTRA_CLOBBER)
+	     : "memory", "cc" __EXTRA_CLOBBER); \
+} while (0)
 #endif
 
 #ifdef __KERNEL__
--- linux-2.6.29.perfctr26/arch/x86/kernel/entry_32.S.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/entry_32.S	2009-03-24 18:49:12.000000000 +0100
@@ -688,6 +688,23 @@ ENDPROC(name)
 /* The include is where all of the SMP etc. interrupts come from */
 #include "entry_arch.h"
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	RING0_INT_FRAME
+	pushl $~(LOCAL_PERFCTR_VECTOR)
+	CFI_ADJUST_CFA_OFFSET 4
+	SAVE_ALL
+	TRACE_IRQS_OFF
+	pushl %esp
+	CFI_ADJUST_CFA_OFFSET 4
+	call smp_perfctr_interrupt
+	addl $4, %esp
+	CFI_ADJUST_CFA_OFFSET -4
+	jmp ret_from_intr
+	CFI_ENDPROC
+ENDPROC(perfctr_interrupt)
+#endif
+
 ENTRY(coprocessor_error)
 	RING0_INT_FRAME
 	pushl $0
--- linux-2.6.29.perfctr26/arch/x86/kernel/entry_64.S.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/entry_64.S	2009-03-24 18:49:12.000000000 +0100
@@ -1025,6 +1025,11 @@ apicinterrupt ERROR_APIC_VECTOR \
 apicinterrupt SPURIOUS_APIC_VECTOR \
 	spurious_interrupt smp_spurious_interrupt
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+apicinterrupt LOCAL_PERFCTR_VECTOR \
+	perfctr_interrupt smp_perfctr_interrupt
+#endif
+
 /*
  * Exception entry points.
  */
--- linux-2.6.29.perfctr26/arch/x86/kernel/irqinit_32.c.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/irqinit_32.c	2009-03-24 18:49:12.000000000 +0100
@@ -20,6 +20,7 @@
 #include <asm/apic.h>
 #include <asm/arch_hooks.h>
 #include <asm/i8259.h>
+#include <asm/perfctr.h>
 #include <asm/traps.h>
 
 
@@ -174,6 +175,8 @@ void __init native_init_IRQ(void)
 	 */
 	intr_init_hook();
 
+	perfctr_vector_init();
+
 	/*
 	 * External FPU? Set up irq13 if so, for
 	 * original braindamaged IBM FERR coupling.
--- linux-2.6.29.perfctr26/arch/x86/kernel/irqinit_64.c.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/irqinit_64.c	2009-03-24 18:49:12.000000000 +0100
@@ -21,6 +21,7 @@
 #include <asm/pgtable.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 #include <asm/i8259.h>
 
 /*
@@ -170,6 +171,8 @@ void __init native_init_IRQ(void)
 
 	apic_intr_init();
 
+	perfctr_vector_init();
+
 	if (!acpi_ioapic)
 		setup_irq(2, &irq2);
 }
--- linux-2.6.29.perfctr26/arch/x86/kernel/process_32.c.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/process_32.c	2009-03-24 18:49:12.000000000 +0100
@@ -28,6 +28,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
@@ -248,6 +249,7 @@ void exit_thread(void)
 		tss->x86_tss.io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 		put_cpu();
 	}
+	perfctr_exit_thread(&current->thread);
 
 	ds_exit_thread(current);
 }
@@ -307,6 +309,8 @@ int copy_thread(int nr, unsigned long cl
 
 	savesegment(gs, p->thread.gs);
 
+	perfctr_copy_task(p, regs);
+
 	tsk = current;
 	if (unlikely(test_tsk_thread_flag(tsk, TIF_IO_BITMAP))) {
 		p->thread.io_bitmap_ptr = kmemdup(tsk->thread.io_bitmap_ptr,
@@ -590,6 +594,8 @@ __switch_to(struct task_struct *prev_p, 
 
 	x86_write_percpu(current_task, next_p);
 
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.29.perfctr26/arch/x86/kernel/process_64.c.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/arch/x86/kernel/process_64.c	2009-03-24 18:49:12.000000000 +0100
@@ -31,6 +31,7 @@
 #include <linux/delay.h>
 #include <linux/module.h>
 #include <linux/ptrace.h>
+#include <linux/perfctr.h>
 #include <linux/random.h>
 #include <linux/notifier.h>
 #include <linux/kprobes.h>
@@ -242,6 +243,7 @@ void exit_thread(void)
 		t->io_bitmap_max = 0;
 		put_cpu();
 	}
+	perfctr_exit_thread(t);
 
 	ds_exit_thread(current);
 }
@@ -348,6 +350,8 @@ int copy_thread(int nr, unsigned long cl
 	savesegment(es, p->thread.es);
 	savesegment(ds, p->thread.ds);
 
+	perfctr_copy_task(p, regs);
+
 	if (unlikely(test_tsk_thread_flag(me, TIF_IO_BITMAP))) {
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
 		if (!p->thread.io_bitmap_ptr) {
@@ -650,6 +654,9 @@ __switch_to(struct task_struct *prev_p, 
 	 */
 	if (tsk_used_math(next_p) && next_p->fpu_counter > 5)
 		math_state_restore();
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.29.perfctr26/drivers/Makefile.~1~	2009-03-24 18:00:34.000000000 +0100
+++ linux-2.6.29.perfctr26/drivers/Makefile	2009-03-24 18:49:12.000000000 +0100
@@ -93,6 +93,7 @@ obj-$(CONFIG_MEMSTICK)		+= memstick/
 obj-$(CONFIG_NEW_LEDS)		+= leds/
 obj-$(CONFIG_INFINIBAND)	+= infiniband/
 obj-$(CONFIG_SGI_SN)		+= sn/
+obj-$(CONFIG_KPERFCTR)		+= perfctr/
 obj-y				+= firmware/
 obj-$(CONFIG_CRYPTO)		+= crypto/
 obj-$(CONFIG_SUPERH)		+= sh/
--- linux-2.6.29.perfctr26/fs/exec.c.~1~	2009-03-24 18:00:46.000000000 +0100
+++ linux-2.6.29.perfctr26/fs/exec.c	2009-03-24 18:49:12.000000000 +0100
@@ -49,6 +49,7 @@
 #include <linux/tsacct_kern.h>
 #include <linux/cn_proc.h>
 #include <linux/audit.h>
+#include <linux/perfctr.h>
 #include <linux/tracehook.h>
 #include <linux/kmod.h>
 #include <linux/fsnotify.h>
@@ -991,6 +992,7 @@ int flush_old_exec(struct linux_binprm *
 	set_task_comm(current, tcomm);
 
 	current->flags &= ~PF_RANDOMIZE;
+	perfctr_flush_thread(&current->thread);
 	flush_thread();
 
 	/* Set the new mm task size. We have to do that late because it may
--- linux-2.6.29.perfctr26/kernel/exit.c.~1~	2009-03-24 18:00:55.000000000 +0100
+++ linux-2.6.29.perfctr26/kernel/exit.c	2009-03-24 18:49:12.000000000 +0100
@@ -30,6 +30,7 @@
 #include <linux/proc_fs.h>
 #include <linux/kthread.h>
 #include <linux/mempolicy.h>
+#include <linux/perfctr.h>
 #include <linux/taskstats_kern.h>
 #include <linux/delayacct.h>
 #include <linux/freezer.h>
@@ -210,6 +211,7 @@ repeat:
 			leader->exit_state = EXIT_DEAD;
 	}
 
+	perfctr_release_task(p);
 	write_unlock_irq(&tasklist_lock);
 	release_thread(p);
 	call_rcu(&p->rcu, delayed_put_task_struct);
--- linux-2.6.29.perfctr26/kernel/sched.c.~1~	2009-03-24 18:00:55.000000000 +0100
+++ linux-2.6.29.perfctr26/kernel/sched.c	2009-03-24 18:49:12.000000000 +0100
@@ -54,6 +54,7 @@
 #include <linux/cpu.h>
 #include <linux/cpuset.h>
 #include <linux/percpu.h>
+#include <linux/perfctr.h>
 #include <linux/kthread.h>
 #include <linux/proc_fs.h>
 #include <linux/seq_file.h>
@@ -6107,6 +6108,8 @@ int set_cpus_allowed_ptr(struct task_str
 	struct rq *rq;
 	int ret = 0;
 
+	perfctr_set_cpus_allowed(p, *new_mask); /* XXX: convert to _ptr */
+
 	rq = task_rq_lock(p, &flags);
 	if (!cpumask_intersects(new_mask, cpu_online_mask)) {
 		ret = -EINVAL;
--- linux-2.6.29.perfctr26/kernel/timer.c.~1~	2009-03-24 18:00:55.000000000 +0100
+++ linux-2.6.29.perfctr26/kernel/timer.c	2009-03-24 18:49:12.000000000 +0100
@@ -33,6 +33,7 @@
 #include <linux/jiffies.h>
 #include <linux/posix-timers.h>
 #include <linux/cpu.h>
+#include <linux/perfctr.h>
 #include <linux/syscalls.h>
 #include <linux/delay.h>
 #include <linux/tick.h>
@@ -1029,6 +1030,7 @@ void update_process_times(int user_tick)
 
 	/* Note: this timer irq context must be accounted for as well. */
 	account_process_tick(p, user_tick);
+	perfctr_sample_thread(&p->thread);
 	run_local_timers();
 	if (rcu_pending(cpu))
 		rcu_check_callbacks(cpu, user_tick);
