--- linux-2.6.9.perfctr26/CREDITS.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/CREDITS	2008-06-22 21:16:50.911321000 +0200
@@ -2583,9 +2583,10 @@ S: Ottawa, Ontario
 S: Canada K2P 0X8
 
 N: Mikael Pettersson
-E: mikpe@csd.uu.se
-W: http://www.csd.uu.se/~mikpe/
+E: mikpe@it.uu.se
+W: http://user.it.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.6.9.perfctr26/Documentation/ioctl-number.txt.~1~	2008-06-22 20:48:52.000000000 +0200
+++ linux-2.6.9.perfctr26/Documentation/ioctl-number.txt	2008-06-22 21:16:46.521321000 +0200
@@ -188,6 +188,8 @@ Code	Seq#	Include File		Comments
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	see drivers/perfctr/
+					<mailto:mikpe@csd.uu.se>
 0xDD	00-3F	ZFCP device driver	see drivers/s390/scsi/
 					<mailto:aherrman@de.ibm.com>
 0xF3	00-3F	video/sisfb.h		sisfb (in development)
--- linux-2.6.9.perfctr26/MAINTAINERS.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/MAINTAINERS	2008-06-22 21:16:50.911321000 +0200
@@ -1725,6 +1725,12 @@ M:	tsbogend@alpha.franken.de
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@it.uu.se
+W:	http://user.it.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 POSIX CLOCKS and TIMERS
 P:	George Anzinger
 M:	george@mvista.com
--- linux-2.6.9.perfctr26/arch/i386/Kconfig.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/i386/Kconfig	2008-06-22 21:16:46.521321000 +0200
@@ -868,6 +868,8 @@ config REGPARM
 	generate incorrect output with certain kernel constructs when
 	-mregparm=3 is used.
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.9.perfctr26/arch/i386/kernel/entry.S.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/i386/kernel/entry.S	2008-06-22 21:16:46.521321000 +0200
@@ -406,6 +406,16 @@ ENTRY(name)				\
 /* The include is where all of the SMP etc. interrupts come from */
 #include "entry_arch.h"
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	pushl $LOCAL_PERFCTR_VECTOR-256
+	SAVE_ALL
+	pushl %esp
+	call smp_perfctr_interrupt
+	addl $4, %esp
+	jmp ret_from_intr
+#endif
+
 ENTRY(divide_error)
 	pushl $0			# no error code
 	pushl $do_divide_error
--- linux-2.6.9.perfctr26/arch/i386/kernel/i8259.c.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/i386/kernel/i8259.c	2008-06-22 21:16:46.521321000 +0200
@@ -24,6 +24,7 @@
 #include <asm/apic.h>
 #include <asm/arch_hooks.h>
 #include <asm/i8259.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -413,6 +414,8 @@ void __init init_IRQ(void)
 	 */
 	intr_init_hook();
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.9.perfctr26/arch/i386/kernel/process.c.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/i386/kernel/process.c	2008-06-22 21:16:46.521321000 +0200
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
@@ -316,6 +317,7 @@ void exit_thread(void)
 		tss->io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 		put_cpu();
 	}
+	perfctr_exit_thread(&tsk->thread);
 }
 
 void flush_thread(void)
@@ -378,6 +380,8 @@ int copy_thread(int nr, unsigned long cl
 	savesegment(fs,p->thread.fs);
 	savesegment(gs,p->thread.gs);
 
+	perfctr_copy_task(p, regs);
+
 	tsk = current;
 	if (unlikely(NULL != tsk->thread.io_bitmap_ptr)) {
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
@@ -601,6 +605,8 @@ struct task_struct fastcall * __switch_t
 	if (unlikely(prev->io_bitmap_ptr || next->io_bitmap_ptr))
 		handle_io_bitmap(next, tss);
 
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.9.perfctr26/arch/ppc/Kconfig.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/ppc/Kconfig	2008-06-22 21:16:46.521321000 +0200
@@ -243,6 +243,8 @@ config NOT_COHERENT_CACHE
 	depends on 4xx || 8xx
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 menu "Platform options"
--- linux-2.6.9.perfctr26/arch/ppc/kernel/head.S.~1~	2008-06-22 20:17:14.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/ppc/kernel/head.S	2008-06-22 21:16:46.521321000 +0200
@@ -502,7 +502,11 @@ SystemCall:
 Trap_0f:
 	EXCEPTION_PROLOG
 	addi	r3,r1,STACK_FRAME_OVERHEAD
+#ifdef CONFIG_PERFCTR_INTERRUPT_SUPPORT
+	EXC_XFER_EE(0xf00, do_perfctr_interrupt)
+#else
 	EXC_XFER_EE(0xf00, UnknownException)
+#endif
 
 /*
  * Handle TLB miss for instruction on 603/603e.
--- linux-2.6.9.perfctr26/arch/ppc/kernel/process.c.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/ppc/kernel/process.c	2008-06-22 21:16:46.521321000 +0200
@@ -35,6 +35,7 @@
 #include <linux/init_task.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
+#include <linux/perfctr.h>
 #include <linux/mqueue.h>
 #include <linux/hardirq.h>
 
@@ -301,7 +302,9 @@ struct task_struct *__switch_to(struct t
 #endif /* CONFIG_SPE */
 	new_thread = &new->thread;
 	old_thread = &current->thread;
+	perfctr_suspend_thread(&prev->thread);
 	last = _switch(old_thread, new_thread);
+	perfctr_resume_thread(&current->thread);
 	local_irq_restore(s);
 	return last;
 }
@@ -370,6 +373,7 @@ void exit_thread(void)
 		last_task_used_math = NULL;
 	if (last_task_used_altivec == current)
 		last_task_used_altivec = NULL;
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -460,6 +464,8 @@ copy_thread(int nr, unsigned long clone_
 
 	p->thread.last_syscall = -1;
 
+	perfctr_copy_task(p, regs);
+
 	return 0;
 }
 
--- linux-2.6.9.perfctr26/arch/x86_64/Kconfig.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/x86_64/Kconfig	2008-06-22 21:16:46.521321000 +0200
@@ -327,6 +327,8 @@ config X86_MCE
 	   machine check error logs. See
 	   ftp://ftp.x86-64.org/pub/linux/tools/mcelog
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.9.perfctr26/arch/x86_64/kernel/entry.S.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/x86_64/kernel/entry.S	2008-06-22 21:16:46.521321000 +0200
@@ -560,6 +560,11 @@ ENTRY(spurious_interrupt)
 	apicinterrupt SPURIOUS_APIC_VECTOR,smp_spurious_interrupt
 #endif
 				
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	apicinterrupt LOCAL_PERFCTR_VECTOR,smp_perfctr_interrupt
+#endif
+
 /*
  * Exception entry points.
  */ 		
--- linux-2.6.9.perfctr26/arch/x86_64/kernel/i8259.c.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/x86_64/kernel/i8259.c	2008-06-22 21:16:46.521321000 +0200
@@ -24,6 +24,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -560,6 +561,8 @@ void __init init_IRQ(void)
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.9.perfctr26/arch/x86_64/kernel/process.c.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/arch/x86_64/kernel/process.c	2008-06-22 21:16:46.521321000 +0200
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/irq.h>
 #include <linux/ptrace.h>
+#include <linux/perfctr.h>
 #include <linux/version.h>
 
 #include <asm/uaccess.h>
@@ -272,6 +273,7 @@ void exit_thread(void)
 		t->io_bitmap_max = 0;
 		put_cpu();
 	}
+	perfctr_exit_thread(&me->thread);
 }
 
 void flush_thread(void)
@@ -375,6 +377,8 @@ int copy_thread(int nr, unsigned long cl
 	asm("movl %%es,%0" : "=m" (p->thread.es));
 	asm("movl %%ds,%0" : "=m" (p->thread.ds));
 
+	perfctr_copy_task(p, regs);
+
 	if (unlikely(me->thread.io_bitmap_ptr != NULL)) { 
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
 		if (!p->thread.io_bitmap_ptr) {
@@ -524,6 +528,8 @@ struct task_struct *__switch_to(struct t
 		}
 	}
 
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.9.perfctr26/drivers/Makefile.~1~	2008-06-22 21:14:47.000000000 +0200
+++ linux-2.6.9.perfctr26/drivers/Makefile	2008-06-22 21:16:46.521321000 +0200
@@ -58,4 +58,5 @@ obj-$(CONFIG_MCA)		+= mca/
 obj-$(CONFIG_EISA)		+= eisa/
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
 obj-$(CONFIG_MMC)		+= mmc/
+obj-$(CONFIG_KPERFCTR)		+= perfctr/
 obj-y				+= firmware/
--- linux-2.6.9.perfctr26/fs/exec.c.~1~	2008-06-22 21:14:48.000000000 +0200
+++ linux-2.6.9.perfctr26/fs/exec.c	2008-06-22 21:16:50.911321000 +0200
@@ -46,6 +46,7 @@
 #include <linux/security.h>
 #include <linux/syscalls.h>
 #include <linux/rmap.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/mmu_context.h>
@@ -856,6 +857,7 @@ int flush_old_exec(struct linux_binprm *
 	tcomm[i] = '\0';
 	set_task_comm(current, tcomm);
 
+	perfctr_flush_thread(&current->thread);
 	flush_thread();
 
 	if (bprm->e_uid != current->euid || bprm->e_gid != current->egid || 
--- linux-2.6.9.perfctr26/include/asm-i386/mach-default/irq_vectors.h.~1~	2008-06-22 15:56:54.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-i386/mach-default/irq_vectors.h	2008-06-22 21:16:46.521321000 +0200
@@ -56,14 +56,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.9.perfctr26/include/asm-i386/mach-visws/irq_vectors.h.~1~	2008-06-22 15:56:54.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-i386/mach-visws/irq_vectors.h	2008-06-22 21:16:46.521321000 +0200
@@ -35,14 +35,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.9.perfctr26/include/asm-i386/processor.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-i386/processor.h	2008-06-22 21:16:46.521321000 +0200
@@ -435,6 +435,8 @@ struct thread_struct {
 	unsigned long	*io_bitmap_ptr;
 /* max allowed port in the bitmap, in bytes: */
 	unsigned long	io_bitmap_max;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {							\
--- linux-2.6.9.perfctr26/include/asm-i386/system.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-i386/system.h	2008-06-22 21:16:46.521321000 +0200
@@ -14,6 +14,7 @@ extern struct task_struct * FASTCALL(__s
 
 #define switch_to(prev,next,last) do {					\
 	unsigned long esi,edi;						\
+	perfctr_suspend_thread(&(prev)->thread);			\
 	asm volatile("pushfl\n\t"					\
 		     "pushl %%ebp\n\t"					\
 		     "movl %%esp,%0\n\t"	/* save ESP */		\
--- linux-2.6.9.perfctr26/include/asm-ppc/processor.h.~1~	2008-06-22 20:48:54.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-ppc/processor.h	2008-06-22 21:16:46.521321000 +0200
@@ -126,6 +126,9 @@ struct thread_struct {
 	unsigned long	spefscr;	/* SPE & eFP status */
 	int		used_spe;	/* set if process has used spe */
 #endif /* CONFIG_SPE */
+#ifdef CONFIG_PERFCTR_VIRTUAL
+	struct vperfctr *perfctr;	/* performance counters */
+#endif
 };
 
 #define ARCH_MIN_TASKALIGN 16
--- linux-2.6.9.perfctr26/include/asm-x86_64/hw_irq.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-x86_64/hw_irq.h	2008-06-22 21:16:46.521321000 +0200
@@ -65,14 +65,15 @@ struct hw_interrupt_type;
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in irq.h */
 
 
 #ifndef __ASSEMBLY__
--- linux-2.6.9.perfctr26/include/asm-x86_64/irq.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-x86_64/irq.h	2008-06-22 21:16:46.521321000 +0200
@@ -29,7 +29,7 @@
  */
 #define NR_VECTORS 256
 
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in hw_irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in hw_irq.h */
 
 #ifdef CONFIG_PCI_MSI
 #define NR_IRQS FIRST_SYSTEM_VECTOR
--- linux-2.6.9.perfctr26/include/asm-x86_64/processor.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-x86_64/processor.h	2008-06-22 21:16:46.521321000 +0200
@@ -257,6 +257,8 @@ struct thread_struct {
 	unsigned io_bitmap_max;
 /* cached TLS descriptors. */
 	u64 tls_array[GDT_ENTRY_TLS_ENTRIES];
+/* performance counters */
+	struct vperfctr *perfctr;
 } __attribute__((aligned(16)));
 
 #define INIT_THREAD  {}
--- linux-2.6.9.perfctr26/include/asm-x86_64/system.h.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/include/asm-x86_64/system.h	2008-06-22 21:16:46.521321000 +0200
@@ -26,7 +26,8 @@
 #define __EXTRA_CLOBBER  \
 	,"rcx","rbx","rdx","r8","r9","r10","r11","r12","r13","r14","r15"
 
-#define switch_to(prev,next,last) \
+#define switch_to(prev,next,last) do { \
+	perfctr_suspend_thread(&(prev)->thread); \
 	asm volatile(SAVE_CONTEXT						    \
 		     "movq %%rsp,%P[threadrsp](%[prev])\n\t" /* save RSP */	  \
 		     "movq %P[threadrsp](%[next]),%%rsp\n\t" /* restore RSP */	  \
@@ -46,7 +47,8 @@
 		       [tif_fork] "i" (TIF_FORK),			  \
 		       [thread_info] "i" (offsetof(struct task_struct, thread_info)), \
 		       [pda_pcurrent] "i" (offsetof(struct x8664_pda, pcurrent))   \
-		     : "memory", "cc" __EXTRA_CLOBBER)
+		     : "memory", "cc" __EXTRA_CLOBBER); \
+} while (0)
     
 extern void load_gs_index(unsigned); 
 
--- linux-2.6.9.perfctr26/kernel/exit.c.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/kernel/exit.c	2008-06-22 21:16:46.531321000 +0200
@@ -24,6 +24,7 @@
 #include <linux/mount.h>
 #include <linux/proc_fs.h>
 #include <linux/mempolicy.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
@@ -89,6 +90,7 @@ repeat: 
 		zap_leader = (leader->exit_signal == -1);
 	}
 
+	perfctr_release_task(p);
 	sched_exit(p);
 	write_unlock_irq(&tasklist_lock);
 	spin_unlock(&p->proc_lock);
--- linux-2.6.9.perfctr26/kernel/sched.c.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/kernel/sched.c	2008-06-22 21:16:46.531321000 +0200
@@ -40,6 +40,7 @@
 #include <linux/rcupdate.h>
 #include <linux/cpu.h>
 #include <linux/percpu.h>
+#include <linux/perfctr.h>
 #include <linux/kthread.h>
 #include <linux/seq_file.h>
 #include <linux/times.h>
@@ -3840,6 +3841,8 @@ int set_cpus_allowed(task_t *p, cpumask_
 	migration_req_t req;
 	runqueue_t *rq;
 
+	perfctr_set_cpus_allowed(p, new_mask);
+
 	rq = task_rq_lock(p, &flags);
 	if (!cpus_intersects(new_mask, cpu_online_map)) {
 		ret = -EINVAL;
--- linux-2.6.9.perfctr26/kernel/timer.c.~1~	2008-06-22 21:14:49.000000000 +0200
+++ linux-2.6.9.perfctr26/kernel/timer.c	2008-06-22 21:16:46.531321000 +0200
@@ -31,6 +31,7 @@
 #include <linux/time.h>
 #include <linux/jiffies.h>
 #include <linux/cpu.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/unistd.h>
@@ -848,6 +849,7 @@ static void update_one_process(struct ta
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
